{"version":3,"sources":["sales.js"],"names":["Sales","req","res","sales","func","readFile","status","json","success","message","params","salesId","sale","product","body","category","quantity","price","attendant","date","isDate","updatedFile","updateFile","deletedFile","deleteFile","saleRecord"],"mappings":";;;;;;;;AAAA;;AACA;;;;;;;;IAEMA,K;;;;;;;;AACJ;qCACwBC,G,EAAKC,G,EAAK;AAChC,UAAMC,QAAQC,oBAAKC,QAAL,CAAc,OAAd,CAAd;;AAEA,UAAI,CAACF,KAAL,EAAY;AACV,eAAOD,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;AACD,aAAOP,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,IADiB;AAE1BL,oBAF0B;AAG1BM,iBAAS;AAHiB,OAArB,CAAP;AAKD;;AAED;;;;oCACuBR,G,EAAKC,G,EAAK;AAC/B,UAAMC,QAAQC,oBAAKC,QAAL,CAAc,OAAd,EAAuBJ,IAAIS,MAAJ,CAAWC,OAAlC,CAAd;;AAEA,UAAI,CAACR,KAAL,EAAY;AACV,eAAOD,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;AACD,aAAOP,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,IADiB;AAE1BL,oBAF0B;AAG1BM,iBAAS;AAHiB,OAArB,CAAP;AAKD;;AAED;;;;oCACuBR,G,EAAKC,G,EAAK;AAC/B,UAAMU,OAAO;AACXC,iBAASZ,IAAIa,IAAJ,CAASD,OADP;AAEXF,iBAASV,IAAIa,IAAJ,CAASH,OAFP;AAGXI,kBAAUd,IAAIa,IAAJ,CAASC,QAHR;AAIXC,kBAAUf,IAAIa,IAAJ,CAASE,QAJR;AAKXC,eAAOhB,IAAIa,IAAJ,CAASG,KALL;AAMXC,mBAAWjB,IAAIa,IAAJ,CAASI,SANT;AAOXC,cAAMC;AAPK,OAAb;;AAUA,UAAMC,cAAcjB,oBAAKkB,UAAL,CAAgB,OAAhB,EAAyBV,IAAzB,EAA+BX,IAAIa,IAAJ,CAASH,OAAxC,EAAiD,QAAjD,CAApB;;AAEA,UAAIU,gBAAgB,OAApB,EAA6B;AAC3B,eAAOnB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;;AAED,UAAIY,gBAAgB,OAApB,EAA6B;AAC3B,eAAOnB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;;AAED,aAAOP,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,IADiB;AAE1BI,kBAF0B;AAG1BH,iBAAS;AAHiB,OAArB,CAAP;AAKD;;AAED;;;;qCACwBR,G,EAAKC,G,EAAK;AAChC,UAAMqB,cAAcnB,oBAAKoB,UAAL,CAAgB,OAAhB,EAAyBvB,IAAIa,IAAJ,CAASH,OAAlC,CAApB;;AAEA,UAAIY,gBAAgB,OAApB,EAA6B;AAC3B,eAAOrB,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,mBAAS,KADiB;AAE1BC,mBAAS;AAFiB,SAArB,CAAP;AAID;;AAED,aAAOP,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,iBAAS,IADiB;AAE1BiB,oBAAYF,WAFc;AAG1Bd,iBAAS;AAHiB,OAArB,CAAP;AAKD;;AAED;AACA;;;;;;;kBAGaT,K","file":"sales.js","sourceRoot":"C:/Users/Peerless/Documents/mine/nodes/Bootcamp/Store-Manager/src/controller","sourcesContent":["import { isDate } from 'util';\r\nimport func from '../middlewares/functions';\r\n\r\nclass Sales {\r\n  // Module that gets all sales\r\n  static fetchSaleRecords(req, res) {\r\n    const sales = func.readFile('sales');\r\n\r\n    if (!sales) {\r\n      return res.status(403).json({\r\n        success: false,\r\n        message: 'Request to get all sale records not succesfull',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      success: true,\r\n      sales,\r\n      message: 'Request to get all sale records successfull',\r\n    });\r\n  }\r\n\r\n  // Module that gets specific product\r\n  static fetchSaleRecord(req, res) {\r\n    const sales = func.readFile('sales', req.params.salesId);\r\n\r\n    if (!sales) {\r\n      return res.status(403).json({\r\n        success: false,\r\n        message: 'Request to get specific sale record was not succesfull',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      success: true,\r\n      sales,\r\n      message: 'Request to get specific sale record successfull',\r\n    });\r\n  }\r\n\r\n  // Module that create new product\r\n  static createSaleOrder(req, res) {\r\n    const sale = {\r\n      product: req.body.product,\r\n      salesId: req.body.salesId,\r\n      category: req.body.category,\r\n      quantity: req.body.quantity,\r\n      price: req.body.price,\r\n      attendant: req.body.attendant,\r\n      date: isDate,\r\n    };\r\n\r\n    const updatedFile = func.updateFile('sales', sale, req.body.salesId, 'create');\r\n\r\n    if (updatedFile === 'error') {\r\n      return res.status(403).json({\r\n        success: false,\r\n        message: 'Your request was not succesfull',\r\n      });\r\n    }\r\n\r\n    if (updatedFile === 'exist') {\r\n      return res.status(403).json({\r\n        success: false,\r\n        message: 'Sale record already exist',\r\n      });\r\n    }\r\n\r\n    return res.status(200).json({\r\n      success: true,\r\n      sale,\r\n      message: 'Sale record created successfully',\r\n    });\r\n  }\r\n\r\n  //  Module that delete user\r\n  static deleteSaleRecord(req, res) {\r\n    const deletedFile = func.deleteFile('sales', req.body.salesId);\r\n\r\n    if (deletedFile === 'error') {\r\n      return res.status(403).json({\r\n        success: false,\r\n        message: 'Your request was not succesfull',\r\n      });\r\n    }\r\n\r\n    return res.status(200).json({\r\n      success: true,\r\n      saleRecord: deletedFile,\r\n      message: 'Sale record deleted successfully',\r\n    });\r\n  }\r\n\r\n  // updateSaleRecord (req, res, next) {\r\n  // }\r\n}\r\n\r\nexport default Sales;\r\n"]}
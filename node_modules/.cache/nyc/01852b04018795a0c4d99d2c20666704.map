{"version":3,"sources":["validate.js"],"names":["validateGeneral","req","res","next","body","category","trim","length","status","send","success","message","price","Number","isNaN","parseInt","quantity","indexOf","validateProduct","name","productId","validateSale","product","salesId","attendant"],"mappings":"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","file":"validate.js","sourceRoot":"C:/Users/Peerless/Documents/mine/nodes/Bootcamp/Store-Manager/src/middlewares","sourcesContent":["export default {\r\n  validateGeneral: (req, res, next) => {\r\n    if (!req.body.category || req.body.category.trim().length < 1) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain category',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!req.body.price) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain price',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (Number.isNaN(parseInt(req.body.price, 10))) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Price must contain only numbers',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!req.body.quantity) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain quantity',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (Number.isNaN(parseInt(req.body.quantity, 10))) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Quantity must contain only numbers',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (req.body.quantity.indexOf('.') !== -1) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Quantity must not contain decimals',\r\n      });\r\n      return;\r\n    }\r\n    next();\r\n  },\r\n\r\n  validateProduct: (req, res, next) => {\r\n    if (!req.body.name || req.body.name.trim().length < 1) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain product name',\r\n      });\r\n      return;\r\n    }\r\n    if (!req.body.productId || req.body.productId.trim().length < 1) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain productId',\r\n      });\r\n      return;\r\n    }\r\n    next();\r\n  },\r\n\r\n  validateSale: (req, res, next) => {\r\n    if (!req.body.product || req.body.product.trim().length < 1) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain product name',\r\n      });\r\n      return;\r\n    }\r\n    if (!req.body.salesId || req.body.salesId.trim().length < 1) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain salesId',\r\n      });\r\n      return;\r\n    }\r\n    if (!req.body.attendant || req.body.attendant.trim().length < 1) {\r\n      res.status(400).send({\r\n        success: false,\r\n        message: 'Request must contain attendant name',\r\n      });\r\n      return;\r\n    }\r\n    next();\r\n  },\r\n};\r\n"]}
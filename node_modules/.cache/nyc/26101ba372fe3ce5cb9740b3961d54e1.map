{"version":3,"sources":["sales.js"],"names":["process","env","NODE_ENV","should","chai","use","chaiHttp","saleID","sale","product","salesId","category","quantity","price","attendant","describe","it","done","request","server","get","end","err","res","have","status","body","be","an","sales","property","eql","Object","keys","then","post","send","noCat","noPrice","letterPrice","noQuantity","letterQuantity","decimalQuantity","noName","noProductId","delete","saleRecord"],"mappings":"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","file":"sales.js","sourceRoot":"C:/Users/Peerless/Documents/mine/nodes/Bootcamp/Store-Manager/src/test","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../server';\r\n\r\nprocess.env.NODE_ENV = 'test';\r\n\r\nconst should = chai.should();\r\n\r\nchai.use(chaiHttp);\r\n\r\nlet saleID = '';\r\n\r\nconst sale = {\r\n  product: 'Pepsi[50Cl]',\r\n  salesId: '000078',\r\n  category: 'Drinks',\r\n  quantity: '2',\r\n  price: '200',\r\n  attendant: 'Adeniran Mark',\r\n};\r\n\r\n// Test GET endpoint of sales\r\ndescribe('API endpoint GET /sales', () => {\r\n  it('Should return all sales record', (done) => {\r\n    chai.request(server)\r\n      .get('/api/v1/sales')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.sales.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        Object.keys(res.body.sales).should.be.an('array');\r\n        saleID = Object.keys(res.body.sales);\r\n        res.body.sales[saleID[0]].should.have.property('product');\r\n        res.body.sales[saleID[0]].should.have.property('salesId');\r\n        res.body.sales[saleID[0]].should.have.property('category');\r\n        res.body.sales[saleID[0]].should.have.property('price');\r\n        res.body.sales[saleID[0]].should.have.property('quantity');\r\n        res.body.sales[saleID[0]].should.have.property('attendant');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return specified sales order through its salesId', (done) => {\r\n    chai.request(server)\r\n      .get(`/api/v1/sales/${saleID[0]}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        res.body.sales.should.be.an('object');\r\n        res.body.sales.should.have.property('product');\r\n        res.body.sales.should.have.property('salesId');\r\n        res.body.sales.should.have.property('category');\r\n        res.body.sales.should.have.property('price');\r\n        res.body.sales.should.have.property('quantity');\r\n        res.body.sales.should.have.property('attendant');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request to get specific sale record was not succesfull if sales ID does not exist', (done) => {\r\n    chai.request(server)\r\n      .get('/api/v1/sales/1hj')\r\n      .then((res) => {\r\n        res.should.have.status(403);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request to get specific sale record was not succesfull');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n//  Test POST endpoint of sale\r\ndescribe('API endpoint POST /sales', () => {\r\n  it('Should add sales order to file', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(sale)\r\n      .then((res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        res.body.should.have.property('sale').be.an('object');\r\n        res.body.sale.should.have.property('product');\r\n        res.body.sale.should.have.property('salesId');\r\n        res.body.sale.should.have.property('category');\r\n        res.body.sale.should.have.property('price');\r\n        res.body.sale.should.have.property('quantity');\r\n        res.body.sale.should.have.property('attendant');\r\n        res.body.should.have.property('message').eql('Sale record created successfully');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Sale record already exist if salesId exist', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(sale)\r\n      .then((res) => {\r\n        res.should.have.status(403);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Sale record already exist');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain category if there is no category', (done) => {\r\n    const noCat = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '000078',\r\n      category: '',\r\n      quantity: '2',\r\n      price: '200',\r\n      attendant: 'Adeniran Mark',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(noCat)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain category');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain price if there is no price', (done) => {\r\n    const noPrice = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '000078',\r\n      category: 'Drinks',\r\n      quantity: '2',\r\n      price: '',\r\n      attendant: 'Adeniran Mark',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(noPrice)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain price');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Price must contain only numbers if price is not a number', (done) => {\r\n    const letterPrice = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '000078',\r\n      category: 'Drinks',\r\n      quantity: '2',\r\n      price: 'aa',\r\n      attendant: 'Adeniran Mark',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(letterPrice)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Price must contain only numbers');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain quantity if there is no quantity', (done) => {\r\n    const noQuantity = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '000078',\r\n      category: 'Drinks',\r\n      quantity: '',\r\n      price: '200',\r\n      attendant: 'Adeniran Mark'\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(noQuantity)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain quantity');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Quantity must contain only numbers if Quantity is not a number', (done) => {\r\n    const letterQuantity = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '000078',\r\n      category: 'Drinks',\r\n      quantity: 'aa',\r\n      price: '200',\r\n      attendant: 'Adeniran Mark',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(letterQuantity)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Quantity must contain only numbers');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Quantity must not contain decimals if there is Quantity is a decimal', (done) => {\r\n    const decimalQuantity = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '000078',\r\n      category: 'Drinks',\r\n      quantity: '4.5',\r\n      price: '200',\r\n      attendant: 'Adeniran Mark',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(decimalQuantity)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Quantity must not contain decimals');\r\n        done();\r\n      });\r\n});\r\n\r\n  it('Should return Request must contain product name if there is no name for the product', (done) => {\r\n    const noName = {\r\n      product: '',\r\n      salesId: '000078',\r\n      category: 'Drinks',\r\n      quantity: '2',\r\n      price: '200',\r\n      attendant: 'Adeniran Mark',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(noName)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain product name');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain salesId if there is no salesId', (done) => {\r\n    const noProductId = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '',\r\n      category: 'Drinks',\r\n      quantity: '2',\r\n      price: '200',\r\n      attendant: 'Adeniran Mark',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(noProductId)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain salesId');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain attendant name if there is no name of attendant', (done) => {\r\n    const noProductId = {\r\n      product: 'Pepsi[50Cl]',\r\n      salesId: '000078',\r\n      category: 'Drinks',\r\n      quantity: '2',\r\n      price: '200',\r\n      attendant: '',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/sales')\r\n      .send(noProductId)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain attendant name');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\ndescribe('API endpoint DELETE /sales', () => {\r\n  it('Should delete data from file', (done) => {\r\n    chai.request(server)\r\n      .delete('/api/v1/sales')\r\n      .send(sale)\r\n      .then((res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        res.body.should.have.property('saleRecord').be.an('object');\r\n        res.body.saleRecord.should.have.property('product');\r\n        res.body.saleRecord.should.have.property('salesId');\r\n        res.body.saleRecord.should.have.property('category');\r\n        res.body.saleRecord.should.have.property('price');\r\n        res.body.saleRecord.should.have.property('quantity');\r\n        res.body.saleRecord.should.have.property('attendant');\r\n        res.body.should.have.property('message').eql('Sale record deleted successfully');\r\n        done();\r\n      });\r\n  });\r\n});\r\n"]}
{"version":3,"sources":["products.js"],"names":["process","env","NODE_ENV","should","chai","use","chaiHttp","productID","product","name","productId","category","price","quantity","describe","it","done","request","server","get","end","err","res","have","status","body","be","an","products","property","eql","Object","keys","then","post","send","noCat","noPrice","letterPrice","noQuantity","letterQuantity","decimalQuantity","noName","noProductId","delete"],"mappings":"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","file":"products.js","sourceRoot":"C:/Users/Peerless/Documents/mine/nodes/Bootcamp/Store-Manager/src/test","sourcesContent":["import chai from 'chai';\r\nimport chaiHttp from 'chai-http';\r\nimport server from '../server';\r\n\r\nprocess.env.NODE_ENV = 'test';\r\n\r\nconst should = chai.should();\r\n\r\nchai.use(chaiHttp);\r\n\r\nlet productID = '';\r\n\r\nconst product = {\r\n  name: 'Bigi Cola',\r\n  productId: '03324DR',\r\n  category: 'Drinks',\r\n  price: '100',\r\n  quantity: '500',\r\n};\r\n\r\n// Test GET endpoint of Products\r\ndescribe('API endpoint GET /products', () => {\r\n  it('Should return all products', (done) => {\r\n    chai.request(server)\r\n      .get('/api/v1/products')\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.products.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        Object.keys(res.body.products).should.be.an('array');\r\n        productID = Object.keys(res.body.products);\r\n        res.body.products[productID[0]].should.have.property('name');\r\n        res.body.products[productID[0]].should.have.property('productId');\r\n        res.body.products[productID[0]].should.have.property('category');\r\n        res.body.products[productID[0]].should.have.property('price');\r\n        res.body.products[productID[0]].should.have.property('quantity');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return specified product through its productId', (done) => {\r\n    chai.request(server)\r\n      .get(`/api/v1/products/${productID[0]}`)\r\n      .end((err, res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        res.body.product.should.be.an('object');\r\n        res.body.product.should.have.property('name');\r\n        res.body.product.should.have.property('productId');\r\n        res.body.product.should.have.property('category');\r\n        res.body.product.should.have.property('price');\r\n        res.body.product.should.have.property('quantity');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request to get specific product was not succesfull if product ID does not exist', (done) => {\r\n    chai.request(server)\r\n      .get('/api/v1/products/1hj')\r\n      .then((res) => {\r\n        res.should.have.status(403);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request to get specific product was not succesfull');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n//  Test POST endpoint of Products\r\ndescribe('API endpoint POST /products', () => {\r\n  it('Should add product to file', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(product)\r\n      .then((res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        res.body.should.have.property('product').be.an('object');\r\n        res.body.product.should.have.property('name');\r\n        res.body.product.should.have.property('productId');\r\n        res.body.product.should.have.property('category');\r\n        res.body.product.should.have.property('price');\r\n        res.body.product.should.have.property('quantity');\r\n        res.body.should.have.property('message').eql('Product Created Successfully');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return product exist if productId exist', (done) => {\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(product)\r\n      .then((res) => {\r\n        res.should.have.status(403);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Product already exist');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain category if there is no category', (done) => {\r\n    const noCat = {\r\n      name: 'Cocacola[60Cl]',\r\n      productId: '00902DR',\r\n      category: '',\r\n      price: '150',\r\n      quantity: '230',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(noCat)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain category');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain price if there is no price', (done) => {\r\n    const noPrice = {\r\n      name: 'Cocacola[60Cl]',\r\n      productId: '00902DR',\r\n      category: 'Drinks',\r\n      price: '',\r\n      quantity: '230',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(noPrice)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain price');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Price must contain only numbers if  price is not a number', (done) => {\r\n    const letterPrice = {\r\n      name: 'Cocacola[60Cl]',\r\n      productId: '00902DR',\r\n      category: 'Drinks',\r\n      price: 'aa',\r\n      quantity: '230',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(letterPrice)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Price must contain only numbers');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain quantity if there is no quantity', (done) => {\r\n    const noQuantity = {\r\n      name: 'Cocacola[60Cl]',\r\n      productId: '00902DR',\r\n      category: 'Drinks',\r\n      price: '150',\r\n      quantity: '',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(noQuantity)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain quantity');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Quantity must contain only numbers if  Quantity is not a number', (done) => {\r\n    const letterQuantity = {\r\n      name: 'Cocacola[60Cl]',\r\n      productId: '00902DR',\r\n      category: 'Drinks',\r\n      price: '150',\r\n      quantity: 'aa',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(letterQuantity)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Quantity must contain only numbers');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Quantity must not contain decimals if Quantity is a decimal', (done) => {\r\n    const decimalQuantity = {\r\n      name: 'Cocacola[60Cl]',\r\n      productId: '00902DR',\r\n      category: 'Drinks',\r\n      price: '150',\r\n      quantity: '4.5',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(decimalQuantity)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Quantity must not contain decimals');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain product name if there is no name for the product', (done) => {\r\n    const noName = {\r\n      name: '',\r\n      productId: '00902DR',\r\n      category: 'Drinks',\r\n      price: '150',\r\n      quantity: '230',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(noName)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain product name');\r\n        done();\r\n      });\r\n  });\r\n\r\n  it('Should return Request must contain productId if there is no productId', (done) => {\r\n    const noProductId = {\r\n      name: 'Cocacola[60Cl]',\r\n      productId: '',\r\n      category: 'Drinks',\r\n      price: '150',\r\n      quantity: '230',\r\n    };\r\n\r\n    chai.request(server)\r\n      .post('/api/v1/products')\r\n      .send(noProductId)\r\n      .then((res) => {\r\n        res.should.have.status(400);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(false);\r\n        res.body.should.have.property('message').eql('Request must contain productId');\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n// Test DELETE endpoint of Products\r\ndescribe('API endpoint DELETE /products', () => {\r\n  it('Should delete data from file', (done) => {\r\n    chai.request(server)\r\n      .delete('/api/v1/products')\r\n      .send(product)\r\n      .then((res) => {\r\n        res.should.have.status(200);\r\n        res.body.should.be.an('object');\r\n        res.body.should.have.property('success').eql(true);\r\n        res.body.should.have.property('product').be.an('object');\r\n        res.body.product.should.have.property('name');\r\n        res.body.product.should.have.property('productId');\r\n        res.body.product.should.have.property('category');\r\n        res.body.product.should.have.property('price');\r\n        res.body.product.should.have.property('quantity');\r\n        res.body.should.have.property('message').eql('Product Deleted Successfully');\r\n        done();\r\n      });\r\n  });\r\n});\r\n"]}